/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2306                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale 1; // convertToMeters 1;

vertices
(
    // z at 0:
        // Reservoir Mid
        (    0.00    0.00    0.00 )   // id:  0
        (    4.50    0.00    0.00 )   // id:  1
        (    4.50    0.25    0.00 )   // id:  2
        (    0.00    0.25    0.00 )   // id:  3
        // Reservoir Low
        (    0.00   -0.50    0.00 )   // id:  4
        (    4.50   -0.50    0.00 )   // id:  5
        // Reservoir Top
        (    0.00    1.00    0.00 )   // id:  6
        (    4.50    1.00    0.00 )   // id:  7

        // inlet
        (   -1.00    0.00    0.00 )   // id:  8
        (   -1.00    0.25    0.00 )   // id:  9
        // outlet
        (    5.50    0.00    0.00 )   // id:  10
        (    5.50    0.25    0.00 )   // id:  11

    // z at 0.5:
        // Reservoir Mid
        (    0.00    0.00    0.50 )   // id:  12
        (    4.50    0.00    0.50 )   // id:  13
        (    4.50    0.25    0.50 )   // id:  14
        (    0.00    0.25    0.50 )   // id:  15
        // Reservoir Low
        (    0.00   -0.50    0.50 )   // id:  16
        (    4.50   -0.50    0.50 )   // id:  17
        // Reservoir Top
        (    0.00    1.00    0.50 )   // id:  18
        (    4.50    1.00    0.50 )   // id:  19

        // inlet
        (   -1.00    0.00    0.50 )   // id:  20
        (   -1.00    0.25    0.50 )   // id:  21
        // outlet
        (    5.50    0.00    0.50 )   // id:  22
        (    5.50    0.25    0.50 )   // id:  23

    // z at 1.0:
        // Reservoir Mid
        (    0.00    0.00    1.00 )   // id:  24
        (    4.50    0.00    1.00 )   // id:  25
        (    4.50    0.25    1.00 )   // id:  26
        (    0.00    0.25    1.00 )   // id:  27
        // Reservoir Low
        (    0.00   -0.50    1.00 )   // id:  28
        (    4.50   -0.50    1.00 )   // id:  29
        // Reservoir Top
        (    0.00    1.00    1.00 )   // id:  30
        (    4.50    1.00    1.00 )   // id:  31

        // inlet
        (   -1.00    0.00    1.00 )   // id:  32
        (   -1.00    0.25    1.00 )   // id:  33
        // outlet
        (    5.50    0.00    1.00 )   // id:  34
        (    5.50    0.25    1.00 )   // id:  35

);

// Mesh Refinements User Input Controls

    // X - Direction slicings
    NXI  25; // Number of cell in the x direction of the inflow Channel
    NXR 125; // Number of cell in the x direction of the Reservoir Section
    NXO  25; // Number of cell in the x direction of the outflow Channel
    // Y - Direction slicings
    NYT  30; // Number of cell in the y direction of the Top Reservoir
    NYM   9; // Number of cell in the y direction of the Middle Reservoir
    NYL  20; // Number of cell in the y direction of the Lower Reservoir
    // Z - Direction slicings
    Nz   10; // Z direction Channel depth

blocks
(       // hex (       Vertices indices to create a block       ) (  slicing the block  ) simpleGrading ( expansiton Ratio factor )
    // Block Down
        hex ( /* z = 0.0: */  0  1  2  3 /* z = 0.5: */ 12 13 14 15 ) ( $NXR $NYM $Nz ) simpleGrading ( 1 1 1 ) // block id: 0 - Reservoir Mid
        hex ( /* z = 0.0: */  4  5  1  0 /* z = 0.5: */ 16 17 13 12 ) ( $NXR $NYL $Nz ) simpleGrading ( 1 1 1 ) // block id: 1 - Reservoir Low
        hex ( /* z = 0.0: */  3  2  7  6 /* z = 0.5: */ 15 14 19 18 ) ( $NXR $NYT $Nz ) simpleGrading ( 1 1 1 ) // block id: 2 - Reservoir Top
        hex ( /* z = 0.0: */  8  0  3  9 /* z = 0.5: */ 20 12 15 21 ) ( $NXI $NYM $Nz ) simpleGrading ( 1 1 1 ) // block id: 3 - inlet channel
        hex ( /* z = 0.0: */  1 10 11  2 /* z = 0.5: */ 13 22 23 14 ) ( $NXO $NYM $Nz ) simpleGrading ( 1 1 1 ) // block id: 4 - outlet channel

    // Block Up
        hex ( /* z = 0.5: */ 12 13 14 15 /* z = 1.0: */ 24 25 26 27 ) ( $NXR $NYM $Nz ) simpleGrading ( 1 1 1 ) // block id: 5 - Reservoir Mid
        hex ( /* z = 0.5: */ 16 17 13 12 /* z = 1.0: */ 28 29 25 24 ) ( $NXR $NYL $Nz ) simpleGrading ( 1 1 1 ) // block id: 6 - Reservoir Low
        hex ( /* z = 0.5: */ 15 14 19 18 /* z = 1.0: */ 27 26 31 30 ) ( $NXR $NYT $Nz ) simpleGrading ( 1 1 1 ) // block id: 7 - Reservoir Top
        hex ( /* z = 0.5: */ 20 12 15 21 /* z = 1.0: */ 32 24 27 33 ) ( $NXI $NYM $Nz ) simpleGrading ( 1 1 1 ) // block id: 8 - inlet channel
        hex ( /* z = 0.5: */ 13 22 23 14 /* z = 1.0: */ 25 34 35 26 ) ( $NXO $NYM $Nz ) simpleGrading ( 1 1 1 ) // block id: 9 - outlet channel
);

// Curved Surface for block atReservoir Low

    // // Method 01:
    //     // Arcs Mid Points
    //     pXVA    2.25;
    //     pYVA   -1.25;
        
    //     edges
    //     (
    //         arc  4  5 ( $pXVA $pYVA 0.0)
    //         arc 16 17 ( $pXVA $pYVA 0.5)
    //         arc 28 29 ( $pXVA $pYVA 1.0)
    //     );

    // // Method 02:
    //     // Arcs Circle Center Points
    //     radius  3.75;
    //     cXV1  #eval "0.5*4.50";
    //     cYV1  #eval "$radius - 1.25";
    //     // //Degrees to Radians
    //     // AlphaStart  #calc "degToRad($AlphaStartDeg)";
    //     // AlphaEnd    #calc "degToRad($AlphaEndDeg)";
        
    //     edges
    //     (
    //         arc  4  5 origin ( $cXV1 $cYV1 0.0)
    //         arc 16 17 origin ( $cXV1 $cYV1 0.5)
    //         arc 28 29 origin ( $cXV1 $cYV1 1.0)
    //     );

boundary
(
    inlet
    {
        type patch;
        faces
        (
            ( 9  8 20 21)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            // Z Down
            (10 11 23 22)
            // Z Up
            (22 23 35 34)
        );
    }
    atmosphere
    {
        type patch;
        faces
        (
            // Z up near inlet
            (21 20 32 33)

            // Front
                // Reservoir Mid
                (24 25 26 27)
                // Reservoir Low
                (28 29 25 24)
                // Reservoir Top
                (27 26 31 30)
                // Inflow channel 
                (32 24 27 33)
                // Outflow Channel
                (25 34 35 26)
        );
    }
    walls
    {
        type wall;
        faces
        (
            // Back plane wall
                // Reservoir Mid
                ( 0  3  2  1 ) 
                // Reservoir Low
                ( 4  0  1  5 )
                // Reservoir Top
                ( 3  7  6  2 )
                // Inlet Channel
                ( 8  9  3  0 )
                // Outlet Channel
                ( 1  2 11 10 )

            // Region: Reservoir Low
                // Backward-Facing Step at Inflow channel 
                ( 0  4 16 12) // Z Down
                (12 16 28 24) // Z Up
                // Parallel Facing Reservoir Low Wall Face
                ( 4  5 17 16) // Z Down
                (16 17 29 28) // Z Up
                // Forward-Facing Step at Outflow Channel
                ( 5  1 13 17) // Z Down
                (17 13 25 29) // Z Up

            // Region: Reservoir Top
                // Backward-Facing Step at Inflow Channel
                ( 6  3 15 18) // Z Down
                (18 15 27 30) // Z Up
                // Parallel Facing Reservoir Low Wall Face
                ( 7  6 18 19) // Z Down
                (19 18 30 31) // Z Up
                // Forward-Facing Step at Outflow Channel
                ( 2  7 19 14) // Z Down
                (14 19 31 26) // Z Up
                
            // Inflow channel walls
                // Z Down
                ( 8  0 12 20) 
                ( 3  9 21 15)
                // Z Up
                (20 12 24 32) 
                (15 21 33 27)

            // Outflow channel walls
                // Z Down
                ( 1 10 22 13)
                (11  2 14 23)
                // Z Up
                (13 22 34 25)
                (23 14 26 35)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
